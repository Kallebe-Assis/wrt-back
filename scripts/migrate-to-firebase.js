require('dotenv').config();
const mongoose = require('mongoose');
const { initializeFirebase, getFirestore } = require('../config/firebase');

// Modelo MongoDB (tempor√°rio para migra√ß√£o)
const NotaMongo = mongoose.model('Nota', new mongoose.Schema({
  titulo: String,
  conteudo: String,
  topico: String,
  dataCriacao: Date,
  dataModificacao: Date,
  ativo: Boolean
}, { collection: 'notas' }));

async function migrateToFirebase() {
  try {
    console.log('üîÑ Iniciando migra√ß√£o do MongoDB para Firebase...');
    
    // Conectar ao MongoDB
    const mongoURI = process.env.MONGODB_URI || 'mongodb://localhost:27017/wrtmind';
    await mongoose.connect(mongoURI);
    console.log('‚úÖ Conectado ao MongoDB');
    
    // Inicializar Firebase
    initializeFirebase();
    const db = getFirestore();
    console.log('‚úÖ Conectado ao Firebase');
    
    // Buscar todas as notas do MongoDB
    const notasMongo = await NotaMongo.find({});
    console.log(`üìä Encontradas ${notasMongo.length} notas no MongoDB`);
    
    if (notasMongo.length === 0) {
      console.log('‚ÑπÔ∏è Nenhuma nota encontrada para migrar');
      return;
    }
    
    // Migrar cada nota
    let migrated = 0;
    let errors = 0;
    
    for (const nota of notasMongo) {
      try {
        // Converter para formato do Firestore
        const notaFirebase = {
          titulo: nota.titulo,
          conteudo: nota.conteudo,
          topico: nota.topico,
          dataCriacao: nota.dataCriacao || new Date(),
          dataModificacao: nota.dataModificacao || new Date(),
          ativo: nota.ativo !== undefined ? nota.ativo : true
        };
        
        // Adicionar ao Firestore
        await db.collection('notas').add(notaFirebase);
        migrated++;
        
        if (migrated % 10 === 0) {
          console.log(`üìù Migradas ${migrated} notas...`);
        }
      } catch (error) {
        console.error(`‚ùå Erro ao migrar nota ${nota._id}:`, error.message);
        errors++;
      }
    }
    
    console.log('\nüéâ Migra√ß√£o conclu√≠da!');
    console.log(`‚úÖ Notas migradas: ${migrated}`);
    console.log(`‚ùå Erros: ${errors}`);
    
    if (errors > 0) {
      console.log('\n‚ö†Ô∏è Algumas notas n√£o puderam ser migradas. Verifique os erros acima.');
    }
    
  } catch (error) {
    console.error('‚ùå Erro durante a migra√ß√£o:', error);
  } finally {
    // Fechar conex√µes
    await mongoose.disconnect();
    console.log('üîå Conex√µes fechadas');
    process.exit(0);
  }
}

// Executar migra√ß√£o se o script for chamado diretamente
if (require.main === module) {
  migrateToFirebase();
}

module.exports = migrateToFirebase; 